$ openssl ecparam -name secp384r1 -genkey -out ca.key

$ openssl req -x509 -new -key ca.key -out ca.pem -outform PEM \
  -days $((365 * 20)) -set_serial 0x01234567 \
  -subj '/C=US/O=Example/OU=SMTP-DANE/CN=Dummy untrustworthy CA for testing' \
  -extensions v3_ca

$ danetool --tlsa-rr --host=x --ca --x509 --load-certificate=ca.pem
_443._tcp.x. IN TLSA ( 02 00 01 e348526e32d604c1ca313637940ae1035da6055039890de9863885403cd34f63 )

$ danetool --tlsa-rr --host=x --ca --load-certificate=ca.pem
_443._tcp.x. IN TLSA ( 02 01 01 c6959b48dd7a09d1f3e2dba1b8c308a5821244d34fa6484c4b2dfb141a23b6e4 )


>> relies upon custom openssl.cnf for SUBJECTALTNAME copy from env:

$ openssl ecparam -genkey -name secp256r1 -out test-server.key
$ SUBJECTALTNAME='DNS:mail.test.invalid, DNS:signedok.test.invalid, DNS:unsigned.test.invalid' \
  openssl req -new -key test-server.key -out test-server.csr -subj '/CN=mail.test.invalid'
	>> done before creating openssl.cnf, should be fine with this config too
$ openssl ca -config openssl.cnf -in test-server.csr -out test-server.crt -days $((365*20))


$ danetool --tlsa-rr --host=x --x509 --load-certificate=test-server.crt
_443._tcp.x. IN TLSA ( 03 00 01 78da6f10cdccd9775872ff871178748df22fcbe6ad66d9d744737cb0e9fa9b3c )

$ danetool --tlsa-rr --host=x --load-certificate=test-server.crt
_443._tcp.x. IN TLSA ( 03 01 01 9a8079b2bfff4b8250cdeadfe26a406f27d79d5b1a15ed9310c240cb5bd9de27 )
